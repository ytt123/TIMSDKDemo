/* 
  Localizable.strings
  English
  
  Created by harvy on 2020/10/9.
  
*/

"TUIKitTipsMostSelectTextFormat" = "Please select no more than %ld";

"Confirm" = "Confirm";
"Cancel" = "Cancel";
"Send" = "Send";
"Save" = "Save";
"You" = "You";
"you" = "you";
"Male" = "Male";
"Female" = "Female";
"File" = "File";
"Download" = "Download";
"Unsetted" = "Unsetted";

"Monday" = "Monday";
"Tuesday" = "Tuesday";
"Wednesday" = "Wednesday";
"Thursday" = "Thursday";
"Friday" = "Friday";
"Saturday" = "Saturday";
"Sunday" = "Sunday";
"Yesterday" = "Yesterday";
"am" = "am";
"pm" = "pm";
"YesterdayDateFormat" = "HH:mma";

"Read" = "Read";
"Unread" = "UnRead";

"Copy" = "Copy";
"Delete" = "Delete";
"Revoke" = "Revoke";
"Retry" = "Retry";
"Re-send" = "Re-send";
"Make-a-call" = "Make a call";
"Done" = "Done";
"All" = "All";
"Living" = "Living";
"Live-finished" = "Live finished";
"Agreed" = "Agreed";
"Disclined" = "Disclined";
"Agree" = "Agree";
"Have-been-sent" = "Have been sent";
"View-the-original" = "View the original";

"TUIKitMicCamerAuthTips" = "Please turn on microphone and camera permissions";
"TUIKitMicAuth" = "Please turn on microphone permissions";
"TUIKitTipsConfirmResendMessage" = "Sure to re-send this message? ";
"TUIKitTipsSystemError" = "System error";
"TUIKitTipsEnterRoomErrorFormat" = "Error in joining room: %d";
"TUIKitWhosLiveFormat" = "%@'s live";
"TUIKitWhoRequestForJoinGroupFormat" = "%@ request for joining group chat";
"TUIKitAgreedByAdministor" = "Agreed by administrator";
"TUIkitDiscliedByAdministor" = "Disclined by administrator";
"TUIKitDownloadProgressFormat" = "Downloading %d%%";
"TUIKitOpenWithOtherApp" = "Open with other app";
"TUIKitTipsContactListNil" = "Contact list is empty, please add friends first";

"TUIKitInputHoldToTalk" = "Hold to Talk";
"TUIKitInputReleaseToSend" = "Release to Send";
"TUIKitInputReleaseToCancel" = "Release to Cancel";
"TUIKitInputNoMicTitle" = "Micphone Disabled";
"TUIKitInputNoMicTips"  = "Enable microphone to send voice messages";
"TUIKitInputNoMicOperateLater" = "Later";
"TUIKitInputNoMicOperateEnable" = "Enable";
"TUIKitInputBlankMessageTitle" = "Blank message is not allowed";
"TUIKitInputWillFinishRecordInSeconds" = "will finished in %lds";
"TUIKitInputRecordSlideToCancel" = "Fingers slide up to cancel";
"TUIKitInputRecordReleaseToCancel" = "Fingers release to cancel";
"TUIKitInputRecordTimeshort" = "Talk time is too short";
"TUIKitInputRecordTimeLong" = "Talk time is too long";

"TUIKitGroupProfileDetails" = "Details";
"TUIKitGroupProfileMember" = "Group Members";
"TUIKitGroupProfileMemberCount" = "%d person";
"TUIKitGroupProfileMemberCountlu" = "%lu person";
"TUIKitGroupProfileType" = "Group Type";
"TUIKitGroupProfileJoinType" = "Join Type";
"TUIKitGroupProfileInviteJoin" = "Invited to join";
"TUIKitGroupProfileAutoApproval" = "Automatic approval";
"TUIKitGroupProfileAlias" = "Alias";
"TUIKitGroupProfileStickyOnTop" = "Sticky on Top";
"TUIKitGroupProfileDeleteAndExit" = "Delete & Exit";
"TUIKitGroupProfileDissolve" = "Dissolve";
"TUIKitGroupProfileJoinDisable" = "Disable Join";
"TUIKitGroupProfileAdminApprove" = "Administrator approval";
"TUIKitGroupProfileEditAlias" = "Editing mine alias in group";
"TUIKitGroupProfileEditGroupName" = "Editing group name";
"TUIKitGroupProfileEditAnnouncement" = "Editing group announcement";
"TUIKitGroupProfileEditAvatar" = "Editing group profile photo";
"TUIKitGroupProfileDeleteGroupTips" = "This group chat message will not be received after exiting";
"TUIKitGroupProfileGroupCountFormat" = "Members(%ld)";
"TUIKitGroupProfileManage" = "Manage";
"TUIKitGroupProfileManageAdd" = "Add members";
"TUIKitGroupProfileManageDelete" = "Delete members";
"TUIKitGroupApplicant" = "Group applicant";
"TUIKitGroupDismssTipsFormat" = "The group %@ has been disbanded";
"TUIKitGroupRecycledTipsFormat" = "The group %@ has been recycled";
"TUIKitGroupKickOffTipsFormat" = "You have been kicked out off the group %@";
"TUIKitGroupDropoutTipsFormat" = "You are out of the group %@";

"TUIKitMessageTipsYouRecallMessage" = "You recalled a message";
"TUIKitMessageTipsRecallMessageFormat" = "\"%@\" recalled a message";
"TUIkitMessageTipsOthersRecallMessage" = "The other side recalled a message";
"TUIKitMessageTipsJoinGroupFormat" = "\"%@\" joined the group";
"TUIKitMessageTipsInviteJoinGroupFormat" = "\"%@\" invited \"%@\" to join the group";
"TUIKitMessageTipsLeaveGroupFormat" = "\"%@\" leaved the group";
"TUIKitMessageTipsKickoffGroupFormat" = "\"%@\"kickoff \"%@\"out of the group";
"TUIKitMessageTipsSettAdminFormat" = "\"%@\" was set up as an administrator";
"TUIKitMessageTipsCancelAdminFormat" = "\"%@\" was disqualified as an administrator";
"TUIkitMessageTipsEditGroupNameFormat" = "%@ changed the group name to \"%@\"、";
"TUIKitMessageTipsEditGroupIntroFormat" = "%@ modified the group profile to \"%@\"、";
"TUIKitMessageTipsEditGroupAnnounceFormat" = "%@ modified the group announcement to \"%@\"、";
"TUIKitMessageTipsEditGroupAvatarFormat" = "%@ modified the group profile photo、";
"TUIKitMessageTipsEditGroupOwnerFormat" = "%@ modified the group owner for \"%@\"、";
"TUIKitMessageTipsCreateGroupFormat" = "\"%@\" created group";
"TUIKitMessageTipsUnsupportCustomMessage" = "[Customized message]";
"TUIKitMessageTipsMute" = "are muted";
"TUIKitMessageTipsUnmute" = "are unmuted";

"TUIKitSignalingFinishGroupChat" = "Finished group chat";
"TUIKitSignalingFinishConversationAndTimeFormat" = "Call finished，duration：%.2d:%.2d";
"TUIKitSignalingNewCall" = "Initiate calling";
"TUIKitSignalingNewGroupCallFormat" = "\"%@\" intiate group calling";
"TUIkitSignalingCancelCall" = "Cancel calling";
"TUIkitSignalingCancelGroupCallFormat" = "\"%@\" cancel group calling";
"TUIkitSignalingHangonCall" = "Accepted";
"TUIKitSignalingHangonCallFormat" = "\"%@\" accepted";
"TUIKitSignalingBusyFormat" = "\"%@\" is busy";
"TUIKitSignalingDeclineFormat" = "\"%@\" declined calling";
"TUIKitSignalingCallBusy" = "Calling busy";
"TUIkitSignalingDecline" = "Calling declined";
"TUIKitSignalingNoResponse" = "Calling no reponse";
"TUIkitSignalingUnrecognlize" = "Unrecognized calling instructions";

"TUIkitMessageTypeImage" = "[Image]";
"TUIKitMessageTypeVoice" = "[Voice]";
"TUIkitMessageTypeVideo" = "[Video]";
"TUIkitMessageTypeFile" = "[File]";
"TUIKitMessageTypeAnimateEmoji" = "[AnimationEmoji]";
"TUIKitMessageTypeDraftFormat" = "[Draft] %@";

"TUIKitMoreCamera" = "Camera";
"TUIKitMorePhoto" = "Alubum";
"TUIKitMoreVideo" = "Video";
"TUIKitMoreFile" = "File";
"TUIKitMoreVideoCall" = "Video Call";
"TUIKitMoreVoiceCall" = "Voice Call";
"TUIKitMoreGroupLive" = "Group Live";

"TUIKitCallInviteYouVideoCall" = "Calling you with video";
"TUIKitCallTurningOnMute" = "Turning on mute";
"TUIKitCallTurningOffMute" = "Turning off mute";
"TUIKitCallUsingSpeaker" = "Using louderspeaker";
"TUIKitCallUsingHeadphone" = "Using headphone";
"TUIKitCallCancelCallingFormat" = "%@ cancelled the call";

"TUIKitAtSelectMemberTitle" = "Choose members";

"TUIKitConversationTipsAtMe" = "[@me]";
"TUIKitConversationTipsAtAll" = "[@all]";
"TUIKitConversationTipsAtMeAndAll" = "[@me][@all]";

"TUIKitPublicGroup" = "Public group";
"TUIKitWorkGroup" = "Work group";
"TUIKitChatRoom" = "Chat room";

"TUIKitContactsNewFriends" = "New Friends";
"TUIKitContactsGroupChats" = "Group Chats";
"TUIKitContactsBlackList" = "Blocked List";
"TUIKitAddFriendSourceFormat" = "Source: %@";
"TUIKitFriendApplicationApproved" = "Friend application approved";
"TUIKitFirendRequestRejected" = "Friend request rejected";

"TUIKitOfflinePushCallTips" = "You have a call";

"TUIKitChatPendencyTitle" = "Click to handle";
"TUIKitChatPendencyRequestToJoinGroupFormat" = "You have %@ requests for joining group";

"TUIKitSignalingLiveRequestForMic" = "Request for mic";
"TUIKitSignalingLiveRequestForMicRejected" = "Rejected the request for mic";
"TUIKitSignalingAgreeMicRequest" = "Agreed the request for mic";
"TUIKitSignalingCloseLinkMicRequest" = "Request for close link-mic";
"TUIKitSignalingCloseLinkMic" = "Close link-mic";
"TUIKitSignalingRequestForPK" = "PK requesting";
"TUIKitSignalingRequestForPKRejected" = "PK requesting rejected";
"TUIKitSignalingRequestForPKAgree" = "PK requesting accepted";
"TUIKitSignalingPKExit" = "Exit PK";

"TUIKitAllowTypeAcceptOne" = "Accept anyone";
"TUIKitAllowTypeNeedConfirm" = "Need confirm";
"TUIKitAllowTypeDeclineAll" = "Decline all";

"TUIKitErrorInProcess" = "In process";
"TUIKitErrorInvalidParameters" = "Invalid parameters";
"TUIKitErrorIOOperateFaild" = "Failed to input/output";
"TUIKitErrorInvalidJson" = "Invalid JSON";
"TUIKitErrorOutOfMemory" = "Out of memory";
"TUIKitErrorParseResponseFaild" = "Failed to parse protobuffer response";
"TUIKitErrorSerializeReqFaild" = "Failed to serialize protobuffer request";
"TUIKitErrorSDKNotInit" = "IM SDK uninit";
"TUIKitErrorLoadMsgFailed" = "Failed to load local database";
"TUIKitErrorDatabaseOperateFailed" = "Failed to operate database";
"TUIKitErrorCrossThread" = "Error in cross thread";
"TUIKitErrorTinyIdEmpty" = "TinyId is empty";
"TUIKitErrorInvalidIdentifier" = "Invalid identifier";
"TUIKitErrorFileNotFound" = "File is NOT exists";
"TUIKitErrorFileTooLarge" = "The file size exceeds the limit";
"TUIKitErrorEmptyFile" = "Empty file";
"TUIKitErrorFileOpenFailed" = "Failed to open file";
"TUIKitErrorNotLogin" = "IM SDK not login";
"TUIKitErrorNoPreviousLogin" = "The user have not been logged in";
"TUIKitErrorUserSigExpired" = "UserSig is expired";
"TUIKitErrorLoginKickedOffByOther" = "Kicked off by others";
"TUIKitErrorTLSSDKInit" = "Failed to init TLS SDK";
"TUIKitErrorTLSSDKUninit" = "TLS SDK not init";
"TUIKitErrorTLSSDKTRANSPackageFormat" = "TLS SDK TRANS packet invalid";
"TUIKitErrorTLSDecrypt" = "TLS SDK Decrypt failed";
"TUIKitErrorTLSSDKRequest" = "TLS SDK request error";
"TUIKitErrorTLSSDKRequestTimeout" = "TLS SDK request timeout";
"TUIKitErrorInvalidConveration" = "Invalid conversation";
"TUIKitErrorFileTransAuthFailed" = "Authentication failed during file transfer";
"TUIKitErrorFileTransNoServer" = "Failed to get server list during file transfer";
"TUIKitErrorFileTransUploadFailed" = "Failed to upload file, check network please";
"TUIKitErrorFileTransUploadFailedNotImage" = "Failed to upload image, check image";
"TUIKitErrorFileTransDownloadFailed" = "Failed to download, check network and file expiredtime";
"TUIKitErrorHTTPRequestFailed" = "HTTP request failed";
"TUIKitErrorInvalidMsgElem" = "Invalid IM SDK message elem";
"TUIKitErrorInvalidSDKObject" = "Invalid object";
"TUIKitSDKMsgBodySizeLimit" = "The size of message body exceeds the limit";
"TUIKitErrorSDKMsgKeyReqDifferRsp" = "Message KEY error";
"TUIKitErrorSDKGroupInvalidID" = "Illegal group ID, user-defined group ID must be printable ASCII characters (0x20-0x7e), the maximum length is 48 bytes, and the prefix cannot be @ TGS#";
"TUIKitErrorSDKGroupInvalidName" = "The group name is illegal. The longest group name is 30 bytes";
"TUIKitErrorSDKGroupInvalidIntroduction" = "Illegal group profile. The longest group profile is 240 bytes";
"TUIKitErrorSDKGroupInvalidNotification" = "Illegal group announcement. The maximum length of group announcement is 300 bytes";
"TUIKitErrorSDKGroupInvalidFaceURL" = "The URL of group avatar is illegal. The maximum length of group avatar URL is 100 bytes";
"TUIKitErrorSDKGroupInvalidNameCard" = "Group business card is illegal. The maximum length of group business card is 50 bytes";
"TUIKitErrorSDKGroupMemberCountLimit" = "Group member limit exceeded";
"TUIKitErrorSDKGroupJoinPrivateGroupDeny" = "Application to join private group is not allowed";
"TUIKitErrorSDKGroupInviteSuperDeny" = "Members with the role of group leader are not allowed to be invited";
"TUIKitErrorSDKGroupInviteNoMember" = "Zero members are not allowed to be invited";
"TUIKitErrorSDKFriendShipInvalidProfileKey" = "Illegal data field";
"TUIKitErrorSDKFriendshipInvalidAddRemark" = "Illegal remark field, maximum 96 bytes";
"TUIKitErrorSDKFriendshipInvalidAddWording" = "The request description field for adding friends is illegal, with a maximum of 120 bytes";
"TUIKitErrorSDKFriendshipInvalidAddSource" = "The add source field of the request to add friends is illegal. The source needs to add \"addsource\"_ Type_” Prefix.";
"TUIKitErrorSDKFriendshipFriendGroupEmpty" = "The friend group field is illegal and must not be empty. The maximum name of each group is 30 bytes";
"TUIKitErrorSDKNetEncodeFailed" = "SSO encryption failed";
"TUIKitErrorSDKNetDecodeFailed" = "SSO decryption failed";
"TUIKitErrorSDKNetAuthInvalid" = "SSO failed to complete authentication";
"TUIKitErrorSDKNetCompressFailed" = "Packet compression failed";
"TUIKitErrorSDKNetUncompressFaile" = "Packet decompression failed";
"TUIKitErrorSDKNetFreqLimit" = "The call frequency is limited to 5 requests per second.";
"TUIKitErrorSDKnetReqCountLimit" = "The request queue exceeds the limit of the number of simultaneous requests. The maximum number of simultaneous requests is 1000.";
"TUIKitErrorSDKNetDisconnect" = "The network is disconnected, no connection is established, or no network is detected when a socket connection is established.";
"TUIKitErrorSDKNetAllreadyConn" = "The network connection has been established. Repeat the creation of the connection";
"TUIKitErrorSDKNetConnTimeout" = "Setting up a network connection timed out. Please wait for the network to recover and try again.";
"TUIKitErrorSDKNetConnRefuse" = "The network connection has been rejected, the request is too frequent, and the server is out of service.";
"TUIKitErrorSDKNetNetUnreach" = "There is no available route to the network. Please wait for the network to recover and try again.";
"TUIKitErrorSDKNetSocketNoBuff" = "There is not enough buffer space resources in the system to complete the call, the system is too busy, internal error.";
"TUIKitERRORSDKNetResetByPeer" = "The connection was reset on the opposite end";
"TUIKitErrorSDKNetSOcketInvalid" = "Socket socket is invalid";
"TUIKitErrorSDKNetHostGetAddressFailed" = "IP address resolution failed";
"TUIKitErrorSDKNetConnectReset" = "Network connection to intermediate node or server reset";
"TUIKitErrorSDKNetWaitInQueueTimeout" = "Request packet waiting to be sent queue timeout";
"TUIKitErrorSDKNetWaitSendTimeout" = "The request packet has entered the queue to be sent. Waiting for the network buffer to enter the system has timed out";
"TUIKitErrorSDKNetWaitAckTimeut" = "The request packet has entered the network buffer of the system, waiting for the server to return the packet timed out";
"TUIKitErrorSDKSVRSSOConnectLimit" = "The number of SSO connections exceeded the limit, and the server refused to serve.";
"TUIKitErrorSDKSVRSSOVCode" = "Error in sending verification code flag.";
"TUIKitErrorSVRSSOD2Expired" = "D2 expired";
"TUIKitErrorSVRA2UpInvalid" = "A2 verification failed";
"TUIKitErrorSVRA2DownInvalid" = "When processing downlink packets, it is found that A2 verification fails or is attacked by security.";
"TUIKitErrorSVRSSOEmpeyKey" = "Empty d2key encryption is not allowed.";
"TUIKitErrorSVRSSOUinInvalid" = "The UIN in D2 does not match the UIN in SSO header.";
"TUIKitErrorSVRSSOVCodeTimeout" = "Verification code distribution timeout.";
"TUIKitErrorSVRSSONoImeiAndA2" = "IMEI and A2 are required.";
"TUIKitErrorSVRSSOCookieInvalid" = "Cookie is illegal.";
"TUIKitErrorSVRSSODownTips" = "The prompt is issued and D2 is expired.";
"TUIKitErrorSVRSSODisconnect" = "Disonnect and lock screen";
"TUIKitErrorSVRSSOIdentifierInvalid" = "Invalid identity.";
"TUIKitErrorSVRSSOClientClose" = "The terminal exits automatically.";
"TUIKitErrorSVRSSOMSFSDKQuit" = "MSF SDK exits automatically.";
"TUIKitErrorSVRSSOD2KeyWrong" = "So d2key decryption failed too many times, inform the terminal to reset and refresh D2 again.";
"TUIKitErrorSVRSSOUnsupport" = "Aggregation is not supported and a uniform error code is returned to the terminal. The terminal stops aggregation on the long TCP connection.";
"TUIKitErrorSVRSSOPrepaidArrears" = "Prepayment is in arrears.";
"TUIKitErrorSVRSSOPacketWrong" = "Request packet format error.";
"TUIKitErrorSVRSSOAppidBlackList" = "Sdkappid blocklist.";
"TUIKitErrorSVRSSOCmdBlackList" = "Sdkappid sets the service CMD blacklist.";
"TUIKitErrorSVRSSOAppidWithoutUsing" = "The sdkappids are disabled.";
"TUIKitErrorSVRSSOFreqLimit" = "Frequency limit (user). Frequency limit is set to limit the number of requests per second for a certain protocol.";
"TUIKitErrorSVRSSOOverload" = "Overload and packet loss (system), too many requests processed by the connected server, unable to handle, denial of service.";
"TUIKitErrorSVRResNotFound" = "The resource file to be sent does not exist.";
"TUIKitErrorSVRResAccessDeny" = "The resource file to be sent is not allowed access.";
"TUIKitErrorSVRResSizeLimit"= "The file size exceeds the limit.";
"TUIKitErrorSVRResSendCancel" = "The user cancels sending, such as logging out during sending.";
"TUIKitErrorSVRResReadFailed" = "Failed to read file contents.";
"TUIKitErrorSVRResTransferTimeout" = "Resource file transfer timeout";
"TUIKitErrorSVRResInvalidParameters" = "Illegal parameter.";
"TUIKitErrorSVRResInvalidFileMd5" = "File MD5 verification failed.";
"TUIKitErrorSVRResInvalidPartMd5" = "Partition MD5 verification failed.";
"TUIKitErrorSVRCommonInvalidHttpUrl" = "HTTP parsing error, please check the HTTP request URL format.";
"TUIKitErrorSVRCommomReqJsonParseFailed" = "HTTP parsing error, please check the HTTP request URL format.";
"TUIKitErrorSVRCommonInvalidAccount" = "Identifier or usersig error in request URI or JSON package body.";
"TUIKitErrorSVRCommonInvalidSdkappid" = "Sdkappids are invalid. Please check the validity of sdkappids.";
"TUIKitErrorSVRCommonRestFreqLimit" = "The call frequency of rest interface exceeds the limit, please reduce the request frequency.";
"TUIKitErrorSVRCommonRequestTimeout" = "Service request timeout or HTTP request format error, please check and try again.";
"TUIKitErrorSVRCommonInvalidRes" = "Request resource error, please check the request URL.";
"TUIKitErrorSVRCommonIDNotAdmin" = "For the identifier field of rest API request, please fill in the app administrator account.";
"TUIKitErrorSVRCommonSdkappidFreqLimit" = "Sdkappid request frequency is out of limit, please reduce the request frequency.";
"TUIKitErrorSVRCommonSdkappidMiss" = "Rest interface needs to be equipped with sdkappids. Please check the sdkappids in the request URL.";
"TUIKitErrorSVRCommonRspJsonParseFailed" = "HTTP response packet JSON parsing error.";
"TUIKitErrorSVRCommonExchangeAccountTimeout" = "Replacement account timeout.";
"TUIKitErrorSVRCommonInvalidIdFormat" = "Wrong type of identifier for request package. Please confirm that the identifier is in string format.";
"TUIKitErrorSVRCommonSDkappidForbidden" = "Sdkappids are disabled";
"TUIKitErrorSVRCommonReqForbidden" = "Request disabled";
"TUIKitErrorSVRCommonReqFreqLimit" = "Requests are too frequent. Please try again later.";
"TUIKitErrorSVRCommonInvalidService" = "The package has not been purchased or the package is being configured and has not yet taken effect. Please try again in five minutes.";
"TUIKitErrorSVRCommonSensitiveText" = "Text security attack, the text may contain sensitive words.";
"TUIKitErrorSVRCommonBodySizeLimit" = "The sending packet is too long";
"TUIKitErrorSVRAccountUserSigExpired" = "Usersig is out of date, please regenerate usersig";
"TUIKitErrorSVRAccountUserSigEmpty" = "The length of usersig is 0";
"TUIKitErrorSVRAccountUserSigCheckFailed" = "Usersig verification failed";
"TUIKitErrorSVRAccountUserSigMismatchPublicKey" = "Failed to verify usersig with public key";
"TUIKitErrorSVRAccountUserSigMismatchId" = "The requested identifier does not match the identifier that generated the usersig.";
"TUIKitErrorSVRAccountUserSigMismatchSdkAppid" = "The requested sdkappids do not match the sdkappids that generated the usersig.";
"TUIKitErrorSVRAccountUserSigPublicKeyNotFound" = "The public key does not exist when verifying usersig";
"TUIKitErrorSVRAccountUserSigSdkAppidNotFount" = "Sdkappid not found, please confirm the application information in the cloud communication im console.";
"TUIKitErrorSVRAccountInvalidUserSig" = "Usersig is invalid. Please regenerate and try again.";
"TUIKitErrorSVRAccountNotFound" = "The requested user account does not exist.";
"TUIKitErrorSVRAccountSecRstr" = "Restricted for security reasons.";
"TUIKitErrorSVRAccountInternalTimeout" = "Server Internal timeout, please try again.";
"TUIKitErrorSVRAccountInvalidCount" = "Illegal batch quantity in request.";
"TUIkitErrorSVRAccountINvalidParameters" = "The parameter is illegal. Please check whether the required field is filled or whether the filling of the field meets the requirements of the agreement.";
"TUIKitErrorSVRAccountAdminRequired" = "The request requires app administrator privileges.";
"TUIKitErrorSVRAccountFreqLimit" = "Limited due to failure and too many retries. Please check whether the usersig is correct and try again in one minute.";
"TUIKitErrorSVRAccountBlackList" = "The account number is pulled into the blacklist.";
"TUIKitErrorSVRAccountCountLimit" = "The number of created accounts exceeds the number limit of free experience version, please upgrade to professional version.";
"TUIKitErrorSVRAccountInternalError" = "Server internal error, please try again.";
"TUIKitErrorSVRProfileInvalidParameters" = "Request parameter error, please check whether the request is correct according to the error description.";
"TUIKitErrorSVRProfileAccountMiss" = "The request parameter is wrong. The user account to pull data is not specified.";
"TUIKitErrorSVRProfileAccountNotFound" = "The requested user account does not exist.";
"TUIKitErrorSVRProfileAdminRequired" = "The request requires app administrator privileges.";
"TUIKitErrorSVRProfileSensitiveText" = "The data field contains sensitive words.";
"TUIKitErrorSVRProfileInternalError" = "Server internal error, please try again later.";
"TUIKitErrorSVRProfileReadWritePermissionRequired" = "There is no read permission for the data field. Please refer to the data field for details.";
"TUIKitErrorSVRProfileTagNotFound" = "Tag of data field does not exist.";
"TUIKitErrorSVRProfileSizeLimit" = "The value length of the data field exceeds 500 bytes.";
"TUIKitErrorSVRProfileValueError" = "The value of the standard configuration data field is wrong. Please refer to the standard configuration data field for details.";
"TUIKitErrorSVRProfileInvalidValueFormat" = "The value type of the data field does not match. Please refer to the standard data field for details.";
"TUIKitErrorSVRFriendshipInvalidParameters" = "Request parameter error, please check whether the request is correct according to the error description.";
"TUIKitErrorSVRFriendshipInvalidSdkAppid" = "Sdkappids do not match.";
"TUIKitErrorSVRFriendshipAccountNotFound" = "The requested user account does not exist.";
"TUIKitErrorSVRFriendshipAdminRequired" = "The request requires app administrator privileges.";
"TUIKitErrorSVRFriendshipSensitiveText" = "The relation chain field contains sensitive words.";
"TUIKitErrorSVRFriendshipNetTimeout" = "Network timeout, please try again later.";
"TUIKitErrorSVRFriendshipWriteConflict" = "Concurrent writing leads to write conflicts. It is recommended to use batch writing.";
"TUIKitErrorSVRFriendshipAddFriendDeny" = "The background forbids the user to make friend request.";
"TUIkitErrorSVRFriendshipCountLimit" = "Your number of friends has reached the system limit.";
"TUIKitErrorSVRFriendshipGroupCountLimit" = "The packet has reached the upper limit of the system.";
"TUIKitErrorSVRFriendshipPendencyLimit" = "The pending number has reached the upper limit of the system.";
"TUIKitErrorSVRFriendshipBlacklistLimit" = "The number of blacklists has reached the upper limit of the system.";
"TUIKitErrorSVRFriendshipPeerFriendLimit" = "The number of friends of the other party has reached the system limit.";
"TUIKitErrorSVRFriendshipInSelfBlacklist" = "The other party is not allowed to add friends in their own blacklist.";
"TUIKitErrorSVRFriendshipAllowTypeDenyAny" = "The other party's verification method of adding friends is that no one is allowed to add themselves as friends.";
"TUIKitErrorSVRFriendshipInPeerBlackList" = "You are not allowed to add friends when you are in the other party's blacklist.";
"TUIKitErrorSVRFriendshipAllowTypeNeedConfirm" = "The request has been sent, waiting for the other party's consent";
"TUIKitErrorSVRFriendshipAddFriendSecRstr" = "Add friend request is hit by security policy, please do not send add friend request frequently.";
"TUIKitErrorSVRFriendshipPendencyNotFound" = "The pending request does not exist.";
"TUIKitErrorSVRFriendshipDelFriendSecRstr" = "The friend deletion request is hit by the security policy. Please do not initiate friend deletion request frequently.";
"TUIKirErrorSVRFriendAccountNotFoundEx" = "The requested user account does not exist.";
"TUIKitErrorSVRMsgPkgParseFailed" = "Failed to parse request package.";
"TUIKitErrorSVRMsgInternalAuthFailed" = "Internal authentication failed.";
"TUIKitErrorSVRMsgInvalidId" = "Invalid identifier";
"TUIKitErrorSVRMsgNetError" = "Network exception, please try again.";
"TUIKitErrorSVRMsgPushDeny" = "Call back before sending a single chat message, and the app background returns to prohibit sending the message.";
"TUIKitErrorSVRMsgInPeerBlackList" = "Sending a single chat message is blackmailed by the other party and is forbidden.";
"TUIKitErrorSVRMsgBothNotFriend" = "Message sending parties are not friends with each other. Sending is forbidden.";
"TUIKitErrorSVRMsgNotPeerFriend" = "When sending a single chat message, you are not a friend of the other party (one-way relationship), and it is forbidden to send it.";
"TUIkitErrorSVRMsgNotSelfFriend" = "When sending a single chat message, the other party is not his own friend (one-way relationship), so it is forbidden to send it.";
"TUIKitErrorSVRMsgShutupDeny" = "It is forbidden to send messages because of the forbidden words.";
"TUIKitErrorSVRMsgRevokeTimeLimit" = "Message recall exceeded the time limit (default 2 minutes).";
"TUIKitErrorSVRMsgDelRambleInternalError" = "Delete roaming internal error.";
"TUIKitErrorSVRMsgJsonParseFailed" = "Parsing of JSON format failed. Please check whether the request package conforms to the JSON specification.";
"TUIKitErrorSVRMsgInvalidJsonBodyFormat" = "The msgbody in the JSON format request package does not conform to the message format description";
"TUIKitErrorSVRMsgInvalidToAccount" = "To is missing in the JSON format request package_ Account field or to_ The account field is not of type integer";
"TUIKitErrorSVRMsgInvalidRand" = "The msgarandom field is missing in the JSON format request package or the msgarandom field is not of integer type";
"TUIKitErrorSVRMsgInvalidTimestamp" = "The msgtimestamp field is missing in the JSON format request package or the msgtimestamp field is not of integer type";
"TUIKitErrorSVRMsgBodyNotArray" = "The msgbody type in the JSON format request package is not an array type";
"TUIKitErrorSVRMsgInvalidJsonFormat" = "The JSON format request package does not conform to the message format description";
"TUIKitErrorSVRMsgToAccountCountLimit" = "The target account number of bulk message sending exceeds 500";
"TUIKitErrorSVRMsgToAccountNotFound" = "To_ Account is not registered or does not exist";
"TUIKitErrorSVRMsgTimeLimit" = "Message offline storage time error (up to 7 days)";
"TUIKitErrorSVRMsgInvalidSyncOtherMachine" = "The syncothermachine field in the JSON format request package is not of integer type";
"TUIkitErrorSVRMsgInvalidMsgLifeTime" = "The msglifetime field in the JSON format request package is not of integer type";
"TUIKitErrorSVRMsgBodySizeLimit" = "The JSON packet is too long. Please do not exceed 8K.";
"TUIKitErrorSVRmsgLongPollingCountLimit" = "Long polling on the web side is kicked (the number of online instances on the web side exceeds the limit).";
"TUIKitErrorSVRGroupApiNameError" = "Wrong interface name in request";
"TUIKitErrorSVRGroupAccountCountLimit" = "Too many accounts are carried in the request package.";
"TUIkitErrorSVRGroupFreqLimit" = "Operation frequency limit, please try to reduce the frequency of the call.";
"TUIKitErrorSVRGroupPermissionDeny" = "Insufficient operation permission";
"TUIKitErrorSVRGroupInvalidReq" = "Illegal request";
"TUIKitErrorSVRGroupSuperNotAllowQuit" = "The group owner is not allowed to quit the group.";
"TUIKitErrorSVRGroupNotFound" = "The group does not exist";
"TUIKitErrorSVRGroupJsonParseFailed" = "Failed to parse the JSON package. Please check whether the format of the package conforms to the JSON format.";
"TUIKitErrorSVRGroupInvalidId" = "The identifier initiating the operation is illegal. Please check whether the identifier of the user initiating the operation is filled in correctly.";
"TUIKitErrorSVRGroupAllreadyMember" = "The invited user is already a member of the group.";
"TUIKitErrorSVRGroupFullMemberCount" = "The group is full. The user in the request cannot be added to the group";
"TUIKitErrorSVRGroupInvalidGroupId" = "Illegal group ID, please check whether the group ID is filled in correctly.";
"TUIKitErrorSVRGroupRejectFromThirdParty" = "The app background rejects this operation through a third-party callback.";
"TUIKitErrorSVRGroupShutDeny" = "The message cannot be sent because it is forbidden. Please check whether the sender is forbidden.";
"TUIKitErrorSVRGroupRspSizeLimit" = "The length of the reply packet exceeds the maximum packet length";
"TUIKitErrorSVRGroupAccountNotFound" = "The requested user account does not exist.";
"TUIKitErrorSVRGroupGroupIdInUse" = "Group ID has been used, please select another group ID.";
"TUIKitErrorSVRGroupSendMsgFreqLimit" = "The frequency of sending messages exceeds the limit. Please extend the interval between sending messages.";
"TUIKitErrorSVRGroupReqAllreadyBeenProcessed" = "This invitation or request has been processed.";
"TUIKitErrorSVRGroupGroupIdUserdForSuper" = "The group ID has been used, and the operator is the group owner, which can be used directly.";
"TUIKitErrorSVRGroupSDkAppidDeny" = "The command word for this sdkappid request has been disabled";
"TUIKitErrorSVRGroupRevokeMsgNotFound" = "The message requesting the recall does not exist.";
"TUIKitErrorSVRGroupRevokeMsgTimeLimit" = "Message recall exceeded the time limit (default 2 minutes).";
"TUIKitErrorSVRGroupRevokeMsgDeny" = "The message requested to be recalled does not support the recall operation.";
"TUIKitErrorSVRGroupNotAllowRevokeMsg" = "Group type does not support message recall.";
"TUIKitErrorSVRGroupRemoveMsgDeny" = "Deletion is not supported for this message type.";
"TUIKitErrorSVRGroupNotAllowRemoveMsg" = "Audio and video chat rooms and online member broadcast groups do not support deleting messages.";
"TUIKitErrorSVRGroupAvchatRoomCountLimit" = "The number of audio and video chat rooms created exceeds the limit";
"TUIKitErrorSVRGroupCountLimit" = "The number of groups that a single user can create and join exceeds the limit.";
"TUIKitErrorSVRGroupMemberCountLimit" = "The number of group members exceeds the limit";
"TUIKitErrorSVRNoSuccessResult" = "Batch operation failed";
"TUIKitErrorSVRToUserInvalid" = "IM: invalid receiver";
"TUIKitErrorSVRRequestTimeout" = "Request timeout";
"TUIKitErrorSVRInitCoreFail" = "Init core module failed";
"TUIKitErrorExpiredSessionNode" = "Sessionnode is null";
"TUIKitErrorLoggedOutBeforeLoginFinished" = "Logged out before login completed (returned at login)";
"TUIKitErrorTLSSDKNotInitialized" = "Tlssdk not initialized";
"TUIKitErrorTLSSDKUserNotFound" = "Tlssdk did not find the corresponding user information";
"TUIKitErrorBindFaildRegTimeout" = "Registration timeout";
"TUIKitErrorBindFaildIsBinding" = "The bind operation is in progress";
"TUIKitErrorPacketFailUnknown" = "Unknown error";
"TUIKitErrorPacketFailReqNoNet" = "There is no network when sending the request packet, and it is converted to case err when processing_ REQ_ NO_ NET_ ON_ REQ:";
"TUIKitErrorPacketFailRespNoNet" = "There is no network when sending the reply packet. It is converted to case err when processing_ REQ_ NO_ NET_ ON_ RSP:";
"TUIKitErrorPacketFailReqNoAuth" = "No permission to send request package";
"TUIKitErrorPacketFailSSOErr" = "SSO error";
"TUIKitErrorPacketFailRespTimeout" = "Reply timeout";
"TUIKitErrorFriendshipProxySyncing" = "proxy_ Manager did not complete SVR data synchronization";
"TUIKitErrorFriendshipProxySyncedFail" = "proxy_ Manager synchronization failed";
"TUIKitErrorFriendshipProxyLocalCheckErr" = "proxy_ Manager request parameter, check locally illegal";
"TUIKitErrorGroupInvalidField" = "The group assistant request field contains non default fields";
"TUIKitErrorGroupStoreageDisabled" = "The local storage of group data is not enabled";
"TUIKitErrorLoadGrpInfoFailed" = "failed to load groupinfo from storage";
"TUIKitErrorReqNoNetOnReq" = "There was no network at the time of the request";
"TUIKitErrorReqNoNetOnResp" = "There is no network to respond to";
"TUIKitErrorServiceNotReady" = "Qalsdk service not ready";
"TUIKitErrorLoginAuthFailed" = "Account authentication failed (tinyid conversion failed)";
"TUIKitErrorNeverConnectAfterLaunch" = "There was no attempt to network after the app started";
"TUIKitErrorReqFailed" = "QAL execution failed";
"TUIKitErrorReqInvaidReq" = "Illegal request, illegal tomsgservice";
"TUIKitErrorReqOnverLoaded" = "The request queue is full";
"TUIKitErrorReqKickOff" = "It has been kicked by other terminals";
"TUIKitErrorReqServiceSuspend" = "Service suspended";
"TUIKitErrorReqInvalidSign" = "SSO signature error";
"TUIKitErrorReqInvalidCookie" = "The SSO cookie is invalid";
"TUIKitErrorLoginTlsRspParseFailed" = "TLS packet return check during login, packet length error";
"TUIKitErrorLoginOpenMsgTimeout" = "When logging in, openstatsvc reports status timeout to openmsg";
"TUIKitErrorLoginOpenMsgRspParseFailed" = "When openstatsvc reports the status to openmsg during login, it fails to resolve the packet return";
"TUIKitErrorLoginTslDecryptFailed" = "TLS decryption failed at login";
"TUIKitErrorWifiNeedAuth" = "WiFi needs authentication";
"TUIKitErrorUserCanceled" = "User cancelled";
"TUIkitErrorRevokeTimeLimitExceed" = "Message revoke exceeded time limit (default 2 minutes)";
"TUIKitErrorLackUGExt" = "Missing UGC extension package";
"TUIKitErrorAutoLoginNeedUserSig" = "Automatic login, local bills expired, need usersig manual login";
"TUIKitErrorQALNoShortConneAvailable" = "No short connection available";
"TUIKitErrorReqContentAttach" = "Message content security attack";
"TUIKitErrorLoginSigExpire" = "Login return, Bill expired";
"TUIKitErrorSDKHadInit" = "The SDK has been initialized. There is no need to initialize it repeatedly";
"TUIKitErrorOpenBDHBase" = "Openbdh error code base";
"TUIKitErrorRequestNoNetOnReq" = "There is no network at the time of request. Please wait for the network to recover and try again";
"TUIKitErrorRequestNoNetOnRsp" = "There is no network when responding. Please wait for the network to recover and try again";
"TUIKitErrorRequestOnverLoaded" = "Request queue is full";